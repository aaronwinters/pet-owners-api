name: OpenAPI Spec Retrieve from Anypoint
on:
  workflow_dispatch:

jobs:
  retrieve-from-anypoint-platform:
    runs-on: ubuntu-latest
    steps:
      # Install nodejs 16
      - name: "Install Node.js"
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Install Anypoint CLI and relevant plugins
      - name: "Install Anypoint CLI"
        run: | 
          npm install -g anypoint-cli-v4
          anypoint-cli-v4 plugins:install anypoint-cli-account-plugin
          anypoint-cli-v4 plugins:install anypoint-cli-designcenter-plugin
          anypoint-cli-v4 --version
          anypoint-cli-v4 plugins --core

      # Checkout the source code
      - name: "Checkout Source Code"
        uses: actions/checkout@v2
      
      # Save temporary branch name as environment variable
      - name: Set Temporary Branch Name
        id: dateTime
        run:  echo "branch_name=oasSync/anypoint-download-$(date +'%Y-%m-%d:%H:%M:%S')" >> $GITHUB_ENV
      
      # Create new branch starting with 'oasSync/anypoint-download'
      - name: Create Temporary Branch
        run: git checkout -b ${{ env.branch_name }}

      # Download OpenAPI spec
      - name: Download OpenAPI Spec from Anypoint Design Center
        run: anypoint-cli-v4 designcenter:project:download --client_id ${{secrets.ANYPOINT_CONNECTED_APP_ID}} --client_secret ${{secrets.ANYPOINT_CONNECTED_APP_SECRET}} --organization ${{secrets.ANYPOINT_ORG_ID}} pet-owners-api ./docs/oas
      
      # Configure Git for commits
      - name: Initialize mandatory git config
        run: |
         git config user.name "GitHub Actions"
         git config user.email noreply@github.com
      
      # Commit changes and push to origin
      - name: Commit Changes
        id: make-commit
        run: |
          git add .
          git commit --message "Adding changes retrieved from Anypoint platform"
          echo "::set-output name=commit::$(git rev-parse HEAD)"
      
      # Create new pull request
      - name: Create Pull Request
        run: gh pr create -B main -H ${{ env.branch_name }} --title '${{ env.branch_name }} into main' --body 'Created by GitHub Action'
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
      # Merge pull request and delete temporary branch